function [xcc,ycc,zcc,ncc] = magnetometer_fit_alt(file)
% Extract magnetometer calibration data
% magnetometer_fit(file)
% file: comma-seperated-file with three columns generated by 'mag loopraw'
% returns [x,y,z,norm] in calibrated form
% Input data units [mG]

% Read the file and save all the inputs in "data" variable
data=dlmread(file);

% Plot the input data
figure(5)
plot(data);
grid
xlabel('Samples')

% User select which samples are used
s=input('Input start sample: ');
e=input('Input end sample: ');

x  = data(s:e,1);
y  = data(s:e,2);
z  = data(s:e,3);
n  = data(s:e,4);

r = mean(n);
[X,Y,Z]=sphere(30);

% Do the fitting with a nonlinear least-squares solver
S=[x y z]; 

% Fitting with offset and scale corrections
C0 = [ mean(x) mean(y) mean(z) 1 1 1 ];
[C] = lsqnonlin(@(C)fmagcalibfull(C,S,r),C0);

% Fitting with offset+rotaion+scale
Cf0 = [ mean(x) mean(y) mean(z) 1 1 1 0 0 0 ];
[Cf] = lsqnonlin(@(Cf)fmagcalibfullrot(Cf,S,r),Cf0) ;

figure(1)
% draw data
plot3( x, y, z, '.r' );
hold on;
M=mesh(X*r,Y*r,Z*r);
set(M,'facecolor','none')
grid
xlabel('x')
ylabel('y')
zlabel('z')
title('Raw magnetometer readings [mG]')
hold off
axis equal

% Calibration data:
offset = Cf(1:3);
scale  = Cf(4:6);
phi    = Cf(7);
theta  = Cf(8);
psi    = Cf(9);
cphi = cos(phi);
sphi = sin(phi);
cth  = cos(theta);
sth  = sin(theta);
cpsi = cos(psi);
spsi = sin(psi);

A = [cpsi*cth  -spsi*cphi+cpsi*sth*sphi  spsi*sphi+cpsi*cphi*sth;
    spsi*cth  cpsi*cphi+sphi*sth*spsi   -cpsi*sphi+sth*spsi*cphi;
    -sth      cth*sphi                  cth*cphi ];

% Show calibration parameters
format short g
disp(sprintf('magOffset ='))
disp(-offset)
disp(sprintf('magScale='))
disp( scale )
disp(sprintf('magRotate='))
disp( A )
disp(sprintf('magRotateTranspose:'))
disp( A' )

% Open a file and write the calibration parameters there
fileID = fopen('calibVal.txt','w');
fprintf(fileID,'param set mag_offset %6.3f %6.3f %6.3f\n', -offset(1), -offset(2), -offset(3));
fprintf(fileID,'param set mag_scale %6.3f %6.3f %6.3f\n', scale(1), scale(2), scale(3));
fprintf(fileID,'param set mag_rotate %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f %6.3f\n',...
    A(1,1), A(1,2), A(1,3), A(2,1), A(2,2), A(2,3), A(3,1), A(3,2), A(3,3));
% Close the file
fclose(fileID);

% Obtain the data corrected
[~,resc,xc,yc,zc]=fmagcalibfull(C,S,r);
[~,rescc,xcc,ycc,zcc]=fmagcalibfullrot(Cf,S,r);

nc = (xc.*xc + yc.*yc + zc.*zc).^0.5;
ncc = (xcc.*xcc + ycc.*ycc + zcc.*zcc).^0.5;

  disp(sprintf('Pre calib std %f mG',std(nc)))
disp(sprintf('Post calib std %f mG',std(ncc)))

figure(2)
% draw data
plot3( xcc, ycc, zcc, '.r' );
hold on;
plot3( xc, yc, zc, '.b' );
M=mesh(X*r,Y*r,Z*r);
set(M,'facecolor','none');
grid
xlabel('x')
ylabel('y')
zlabel('z')
legend('Mag data (full calib)','Mag data (only offset)')
hold off
axis equal

figure(3);
subplot(3,1,1)
plot(x,ncc,x,n,'.')
title('x')
grid
subplot(3,1,2)
plot(y,ncc,y,n,'.')
grid
title('y')
subplot(3,1,3)
plot(z,ncc,z,n,'.')
grid
title('z')
legend('Calibrated Norm','Non-calib Norm')

figure(4)
subplot(3,2,1)
plot(x,y,'*')
axis equal
grid
xlabel('x')
ylabel('y')
title('Non calibrated [mG]')
subplot(3,2,2)
plot(xcc,ycc,'*')
axis equal
grid
xlabel('x')
ylabel('y')
title('Calibrated  [mG]')
subplot(3,2,3)
plot(x,z,'*')
axis equal
grid
xlabel('x')
ylabel('z')
subplot(3,2,4)
plot(xcc,zcc,'*')
axis equal
grid
xlabel('x')
ylabel('z')
subplot(3,2,5)
plot(y,z,'*')
axis equal
grid
xlabel('y')
ylabel('z')
subplot(3,2,6)
plot(ycc,zcc,'*')
axis equal
grid
xlabel('y')
ylabel('z')

figure(6)
plot(ncc)
hold on
plot(n,'r');
hold off
grid
legend('Calibrated Norm','Non-calib Norm')
end